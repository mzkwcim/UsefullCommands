Add-Type -AssemblyName System.Windows.Forms

# Definiuj funkcję do wyświetlania drugiego formularza
function Show-SecondForm {
    param (
        [string]$Data
    )

    # Utwórz formularz z CheckBoxami na podstawie danych z pierwszego formularza
    $secondForm = New-Object System.Windows.Forms.Form
    $secondForm.Text = "Dynamiczne CheckBoxy"
    $secondForm.Size = New-Object System.Drawing.Size(400, 500)
    $secondForm.StartPosition = "CenterScreen"

    # Utwórz FlowLayoutPanel, aby dynamicznie zarządzać CheckBoxami
    $flowLayoutPanel = New-Object System.Windows.Forms.FlowLayoutPanel
    $flowLayoutPanel.Dock = [System.Windows.Forms.DockStyle]::Top
    $flowLayoutPanel.FlowDirection = [System.Windows.Forms.FlowDirection]::TopDown
    $flowLayoutPanel.WrapContents = $false
    $flowLayoutPanel.Size = New-Object System.Drawing.Size(200, 350) 
    $flowLayoutPanel.AutoScroll = $true
    $secondForm.Controls.Add($flowLayoutPanel)

    # Przykładowa lista opcji (możesz ją dostosować do własnych potrzeb)
    $options = $Data  # Użyj danych z pierwszego formularza

    # Dodaj CheckBoxy i etykiety do FlowLayoutPanel na podstawie listy opcji
    foreach ($option in $options) {
        $checkBox = New-Object System.Windows.Forms.CheckBox
        $checkBox.Text = $option
        $checkBox.AutoSize = $true
        $flowLayoutPanel.Controls.Add($checkBox)
    }

    # Przycisk do zapisywania wybranych opcji
    $buttonSave = New-Object System.Windows.Forms.Button
    $buttonSave.Location = New-Object System.Drawing.Point(5, 360)  # Ustaw lokalizację przycisku (x, y)
    $buttonSave.Size = New-Object System.Drawing.Size(100, 30)  # Ustaw rozmiar przycisku (szerokość, wysokość)
    $buttonSave.Text = "Zapisz opcje"
    $buttonSave.Add_Click({
        $selectedOptions = $flowLayoutPanel.Controls | Where-Object { $_.Checked -and $_.GetType().Name -eq 'CheckBox' } | ForEach-Object { $_.Text }
        $global:ResultVariable = $selectedOptions -join ', '  # Zapisz wynik w zmiennej globalnej
        [System.Windows.Forms.MessageBox]::Show("Wybrane opcje: $($global:ResultVariable)", "Zapisane opcje")
        $secondForm.Close()  # Zamknij drugi formularz po zatwierdzeniu
    })
    $secondForm.Controls.Add($buttonSave)

    # Dodaj poniższe linie w celu debugowania
    Write-Host "Lokalizacja przycisku: $($buttonSave.Location.X), $($buttonSave.Location.Y)"
    Write-Host "Rozmiar przycisku: $($buttonSave.Width), $($buttonSave.Height)"

    # Uruchom formularz
    $secondForm.ShowDialog()
}

# Utwórz formularz z polami tekstowymi
$firstForm = New-Object System.Windows.Forms.Form
$firstForm.Text = "Pierwszy formularz"
$firstForm.Size = New-Object System.Drawing.Size(400, 200)
$firstForm.StartPosition = "CenterScreen"

# Dodaj TextBox i przycisk "Zatwierdź"
$textBox = New-Object System.Windows.Forms.TextBox
$textBox.Location = New-Object System.Drawing.Point(10, 10)
$textBox.Size = New-Object System.Drawing.Size(200, 20)
$firstForm.Controls.Add($textBox)

$buttonSubmit = New-Object System.Windows.Forms.Button
$buttonSubmit.Text = "Zatwierdź"
$buttonSubmit.Location = New-Object System.Drawing.Point(10, 40)
$buttonSubmit.Add_Click({
    # Zapisz dane z pierwszego formularza do zmiennej
    $global:FirstFormData = $textBox.Text
    $firstForm.Hide()  # Ukryj pierwszy formularz
    Show-SecondForm -Data $global:FirstFormData  # Wywołaj funkcję do wyświetlenia drugiego formularza
})
$firstForm.Controls.Add($buttonSubmit)

# Uruchom pierwszy formularz
[System.Windows.Forms.Application]::Run($firstForm)

# Po zamknięciu obu formularzy, możesz uzyskać dostęp do wyniku z $global:ResultVariable
Write-Host "Wynik z drugiego formularza: $($global:ResultVariable)"
