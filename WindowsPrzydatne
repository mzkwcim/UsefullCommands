#Odświerzanie sterowników graficznych
WIN + CTRL + SHIFT + B

#dodawanie atrybutu ukryty
gi 'C:\Users\ak582\Desktop\Testowy' | % { $_.Attributes = ($_.Attributes -bor [System.IO.FileAttributes]::Hidden) }

#usuwanie atrybutu ukryty
gi 'C:\Users\ak582\Desktop\Testowy' -fo | % { $_.Attributes = ($_.Attributes -band (-bnot [System.IO.FileAttributes]::Hidden))}

#pozyskanie przybliżonego czasu powstania konta lokalnego, zakładając że informacji nie można znaleźć w winevent i metadane pliku nie zostały zmodyfikowane, można użyć bez ToString i Trim
((gci $home).CreationTime | sort | select -F 1).ToString().Trim()

#wyciąganie pliku z konkretnym rozszerzeniem
(gci -rec $home).Extension | sls "e"

#wyciąganie nazw plików
(gci -rec $home).Name | sls "e"

#wyciąganie zawartości plików
gci -rec $home | sls "e"

#Zarejestrowanie Eventu z efektem dźwiekowym
Register-WmiEvent -Query "SELECT * FROM win32_DeviceChangeEvent" -Action {Add-Type -AssemblyName System.Speech; [Speech.Synthesis.SpeechSynthesizer]::New().Speak("Cokolwiek")}

#wyrejestrowanie Eventu po ID, id zamień na id swojego eventu
Unregister-Event -SubscriptionId 1

#usuwanie poświadczeń z poświadczeń systemu windows
cmdkey /delete:poświadczenie/ippoświadczenia do usunięcia

#usuwanie wszystkich poświadczeń
cmdkey /list | Where { $_ -match "Target:" } | % { cmdkey /delete:($_ -replace "Target: ").Trim(); cmdkey /delete /ras }

#historia paska uruchom
$i=gp HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\RunMRU;$i.MRUList.ToCharArray()|%{$i.$_}

#historia wpisywania poleceń
gc (Get-PSReadLineOption).HistorySavePath

#usuwanie historii powershella 
ri (Get-PSReadLineOption).HistorySavePath

#wylistowanie wszystkich uprawnień
$i=[System.Security.AccessControl.FileSystemRights];$i::GetValues($i)|select -unique|%{$_}

#utworzenie skrótu notatnika w menu kontekstowym
ni -Path 'Registry::HKEY_CLASSES_ROOT\Directory\Background\shell\Notepad\command' -Force | sp -Name '(default)' -Value 'c:\windows\notepad.exe'

#przeszukiwanie rejestru roota
gci -rec 'Registry::HKEY_CLASSES_ROOT\' -Force | where -Property Property -Like '*account*'

