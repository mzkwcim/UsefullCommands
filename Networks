#wylistowanie sieci wi-fi których SSID nie jest ukryty
netsh wlan show networks | Select-String "SSID" | ForEach-Object { $ssid = $_.ToString().Split(":")[1].Trim(); if ($ssid -ne $null) { $ssid } }

#Łączenie z daną siecią
netsh wlan connect name="NazwaTwojejSieci"

#zapominanie sieci wi-fi
netsh wlan delete profile name="NazwaTwojejSieci"

#Linia wyciągająca zapisane na komputerze sieci wi-fi z hasłami
$Networks = New-Object 'System.Collections.Generic.HashSet[object]'

foreach ($net in (netsh wlan show profile | Select-String "All")) {
    $profileName = ($net -replace "    All User Profile     :", "").Trim()

    $profileInfo = netsh wlan show profile name=($net -replace "    All User Profile     :", "").Trim() key=clear

    $ssid = ((($profileInfo | Select-String "SSID ") -replace "SSID name\s*:\s*","").ToString().Trim() -replace "`"","")
    $password = (($profileInfo | Select-String "Key Content") -replace "Key Content\s*:\s*","").ToString().Trim()
    if ($ssid -ne "System.Object[]" -and $password -ne "System.Object[]"){
        $network = [PSCustomObject]@{
            SSID     = $ssid
            Password = $password
        }
    }

    [void]$Networks.Add($network)
}
$Networks | Format-Table -AutoSize

#Sprawdzenie gdzie jestem po ip
(irm ipinfo.io/json).city

#wysyłanie tekstu po icmp
(ipconfig | Out-String) -split "(.{5})" -match "."| % {[Net.NetworkInformation.Ping]::new().Send("localhost",100, ([Text.Encoding]::UTF8).GetBytes($_))}

#lista otwartych portów
(Get-NetTCPConnection | Where-Object {$_.State -eq 'Listen'}).LocalPort




